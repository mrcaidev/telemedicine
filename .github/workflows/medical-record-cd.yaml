name: Medical Record CD

on:
  push:
    branches:
      - main
      - hotfix0727
    paths:
      - medical-record/**
  release:
    types:
      - published

permissions:
  contents: read
  deployments: write

jobs:
  set-env:
    name: Set environment variables
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
      tag: ${{ steps.set-env.outputs.tag }}
    steps:
      - name: Set environment variables
        id: set-env
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            echo "environment=production" >> "${{ github.output }}"
            echo "tag=${{ github.ref }}" >> "${{ github.output }}"
          else
            echo "environment=staging" >> "${{ github.output }}"
            echo "tag=${{ github.sha }}" >> "${{ github.output }}"
          fi

  build-push:
    name: Build and push image
    needs: set-env
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: "{{defaultContext}}:medical-record"
          push: true
          tags: |
            ${{ vars.DOCKERHUB_USERNAME }}/telemedicine-medical-record:latest
            ${{ vars.DOCKERHUB_USERNAME }}/telemedicine-medical-record:${{ needs.set-env.outputs.tag }}

  deploy:
    name: Deploy
    needs:
      - set-env
      - build-push
    if: vars.DEPLOYMENT_ENABLED == 'true'
    runs-on: ubuntu-latest
    environment: ${{ needs.set-env.outputs.environment }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Log in to DigitalOcean
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Connect to Kubernetes
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ vars.K8S_CLUSTER_NAME }}

      - name: Deploy to Kubernetes
        run: |
          helm upgrade --install medical-record ${{ github.workspace }}/deployment/medical-record \
            --values ${{ github.workspace }}/deployment/medical-record/values-${{ needs.set-env.outputs.environment }}.yaml \
            --set image=${{ vars.DOCKERHUB_USERNAME }}/telemedicine-medical-record:${{ needs.set-env.outputs.tag }} \
            --set secrets.MYSQL_URL="${{ secrets.MEDICAL_RECORD_MYSQL_URL }}" \
            --set secrets.MYSQL_USERNAME="${{ secrets.MEDICAL_RECORD_MYSQL_USERNAME }}" \
            --set secrets.MYSQL_PASSWORD="${{ secrets.MEDICAL_RECORD_MYSQL_PASSWORD }}" \
            --set secrets.QWEN_BASE_URL="${{ secrets.QWEN_BASE_URL }}" \
            --set secrets.QWEN_API_KEY="${{ secrets.QWEN_API_KEY }}" \
            --set secrets.KAFKA_BROKERS="${{ secrets.KAFKA_BROKERS }}" \
            --set secrets.KAFKA_SECURITY_PROTOCOL="${{ secrets.KAFKA_SECURITY_PROTOCOL }}" \
            --set secrets.KAFKA_SSL_CA="${{ secrets.KAFKA_SSL_CA }}" \
            --set secrets.KAFKA_SSL_KEY="${{ secrets.KAFKA_SSL_KEY }}" \
            --set secrets.KAFKA_SSL_CERT="${{ secrets.KAFKA_SSL_CERT }}"
