services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8082:8082
    environment:
      - MYSQL_URL=jdbc:mysql://mysql:3306/records_db?useUnicode=true&characterEncoding=utf-8&allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=Asia/Singapore
      - MYSQL_USERNAME=dev
      - MYSQL_PASSWORD=dev
      - KAFKA_BROKERS=kafka:9092
      - QWEN_BASE_URL=https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
      - QWEN_API_KEY=your-api-key
    depends_on:
      mysql:
        condition: service_healthy
      init-kafka:
        condition: service_completed_successfully
    restart: always
    # 添加dns配置
    dns:
      - 8.8.8.8
      - 8.8.4.4

  mysql:
    image: bitnami/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: dev
      MYSQL_PASSWORD: dev
      MYSQL_DATABASE: records_db
      TZ: Asia/Singapore
    volumes:
      - mysql-data:/bitnami/mysql/data
    healthcheck:
      test: mysqladmin ping -h localhost
      interval: 30s
      timeout: 10s
      start_period: 30s
      start_interval: 5s
    restart: always

  init-kafka:
    image: bitnami/kafka
    init: true
    command: sh /init/init.sh
    volumes:
      - ./init/kafka:/init
    depends_on:
      kafka:
        condition: service_healthy

  kafka:
    image: bitnami/kafka
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
    volumes:
      - kafka-data:/bitnami/kafka
    healthcheck:
      test: kafka-topics.sh --bootstrap-server kafka:9092 --list
      interval: 30s
      timeout: 10s
      start_period: 30s
      start_interval: 5s
    restart: always

volumes:
  mysql-data:
  kafka-data:

