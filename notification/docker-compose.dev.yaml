services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - 3000:3000
    environment:
      - RESEND_API_KEY=dev
      - KAFKA_BROKERS=kafka:9092
    volumes:
      - .:/code
      - /code/node_modules
    depends_on:
      init-kafka:
        condition: service_completed_successfully
    restart: always

  init-kafka:
    image: bitnami/kafka
    init: true
    command: [ "bash", "-c", "/init/init.sh" ]
    volumes:
      - ./init/kafka:/init
    depends_on:
      kafka:
        condition: service_healthy

  kafka:
    image: bitnami/kafka
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
    volumes:
      - kafka-data:/bitnami/kafka
    healthcheck:
      test: kafka-topics.sh --bootstrap-server kafka:9092 --list
      interval: 30s
      timeout: 10s
      start_period: 30s
      start_interval: 5s
    restart: always

volumes:
  kafka-data:
