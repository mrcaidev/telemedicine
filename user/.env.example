# JWT secret key.
# Example: a-string-secret-at-least-256-bits-long
JWT_SECRET=

# Super admin's bearer token, used to create platform admins.
# Example: i-am-a-super-admin
SUPER_ADMIN_TOKEN=

# List of Google OAuth 2.0 client IDs, separated by commas.
# Example: xxxxx.apps.googleusercontent.com,xxxxx.apps.googleusercontent.com
GOOGLE_OAUTH_CLIENT_IDS=

# PostgreSQL database connection string.
# Example: postgres://username:password@localhost:5432/database
POSTGRES_URL=

# List of Kafka brokers, separated by commas.
# Example: localhost:9092,localhost:9093
KAFKA_BROKERS=

# Kafka security protocol.
# Optional. Default is PLAINTEXT.
# Options: PLAINTEXT, SASL_SSL, SSL.
KAFKA_SECURITY_PROTOCOL=

# Kafka SASL username.
# Optional. Required if KAFKA_SECURITY_PROTOCOL is SASL_SSL.
# Example: user
KAFKA_SASL_USERNAME=

# Kafka SASL password.
# Optional. Required if KAFKA_SECURITY_PROTOCOL is SASL_SSL.
# Example: password
KAFKA_SASL_PASSWORD=

# Path to Kafka SSL CA certificate.
# Optional. Required if KAFKA_SECURITY_PROTOCOL is SASL_SSL or SSL.
# Example: /etc/kafka/certs/ca.crt
KAFKA_SSL_CA=

# Path to Kafka SSL key.
# Optional. Required if KAFKA_SECURITY_PROTOCOL is SSL.
# Example: /etc/kafka/certs/client.key
KAFKA_SSL_KEY=

# Path to Kafka SSL certificate.
# Optional. Required if KAFKA_SECURITY_PROTOCOL is SSL.
# Example: /etc/kafka/certs/client.crt
KAFKA_SSL_CERT=
